{
  "cv_folds": 3,
  "validation": {
    "method": "logistic_holdout",
    "nested_cv": {
      "outer_folds": 5,
      "inner_folds": 3,
      "n_trials": 50
    },
    "logistic_holdout": {
      "n_iterations": 30,
      "test_size": 0.2
    }
  },
  "experiment": {
    "name": "default_modeling_run",
    "version": "1.0.0",
    "description": "한국 기업 부실예측 모델링 파이프라인"
  },
  "logging": {
    "level": "INFO",
    "save_to_file": true
  },
  "data": {
    "input_path": "data/final",
    "files": {
      "X_train": "X_train.csv",
      "X_val": "X_val.csv",
      "X_test": "X_test.csv",
      "y_train": "y_train.csv",
      "y_val": "y_val.csv",
      "y_test": "y_test.csv"
    }
  },
  "sampling": {
    "data_types": {
      "normal": {
        "enabled": true,
        "description": "원본 데이터 (샘플링 없음)"
      },
      "smote": {
        "enabled": false,
        "description": "BorderlineSMOTE 오버샘플링",
        "sampling_strategy": 0.1,
        "k_neighbors": 5,
        "m_neighbors": 10,
        "kind": "borderline-1",
        "random_state": 42
      },
      "undersampling": {
        "enabled": true,
        "description": "언더샘플링",
        "method": "tomek",
        "sampling_strategy": 0.5,
        "random_state": 42
      },
      "ctgan": {
        "enabled": false,
        "description": "CTGAN 기반 synthetic 데이터 생성",
        "sampling_strategy": 0.1,
        "ctgan": {
          "epochs": 50,
          "batch_size": 500,
          "generator_dim": [
            256,
            256
          ],
          "discriminator_dim": [
            256,
            256
          ]
        }
      },
      "combined": {
        "enabled": true,
        "description": "SMOTE + 언더샘플링 조합",
        "smote": {
          "sampling_strategy": 0.05,
          "k_neighbors": 5,
          "m_neighbors": 10,
          "kind": "borderline-1"
        },
        "undersampling": {
          "method": "tomek",
          "sampling_strategy": 0.1,
          "random_state": 42
        }
      }
    }
  },
  "feature_selection": {
    "enabled": true,
    "method": "logistic_regression_cv",
    "logistic_regression_cv": {
      "Cs": [
        0.01,
        0.1,
        1.0,
        10.0
      ],
      "penalty": "l1",
      "solver": "saga",
      "max_iter": 10000,
      "threshold": "0.00001",
      "scoring": "f1"
    },
    "lasso_cv": {
      "alphas": [
        0.001,
        0.01,
        0.1,
        1.0,
        10.0,
        100.0
      ],
      "threshold": "median"
    },
    "permutation_importance": {
      "base_estimator": "random_forest",
      "n_repeats": 5,
      "random_state": 42,
      "threshold": "median",
      "max_features": null,
      "scoring": "f1",
      "estimator_params": {
        "random_forest": {
          "n_estimators": 100,
          "max_depth": 10,
          "min_samples_split": 5,
          "min_samples_leaf": 2,
          "class_weight": "balanced"
        },
        "logistic_regression": {
          "C": 1.0,
          "penalty": "l2",
          "solver": "lbfgs",
          "max_iter": 1000,
          "class_weight": "balanced"
        },
        "xgboost": {
          "n_estimators": 100,
          "max_depth": 6,
          "learning_rate": 0.1,
          "subsample": 0.8,
          "colsample_bytree": 0.8
        }
      }
    },
    "shap": {
      "base_estimator": "random_forest",
      "explainer_type": "tree",
      "threshold": "median",
      "max_features": 10,
      "sample_size": 5000,
      "estimator_params": {
        "random_forest": {
          "n_estimators": 100,
          "max_depth": 8,
          "min_samples_split": 5,
          "min_samples_leaf": 3,
          "class_weight": "balanced"
        },
        "logistic_regression": {
          "C": 1.0,
          "penalty": "l2",
          "solver": "lbfgs",
          "max_iter": 1000,
          "class_weight": "balanced"
        },
        "xgboost": {
          "n_estimators": 100,
          "max_depth": 6,
          "learning_rate": 0.1,
          "subsample": 0.8,
          "colsample_bytree": 0.8
        }
      }
    }
  },
  "models": {
    "optimization": {
      "primary_metric": "average_precision",
      "description": "하이퍼파라미터 최적화 시 사용할 주요 메트릭"
    },
    "logistic_regression": {
      "enabled": true,
      "class_weight": "balanced",
      "penalty": [
        "l2",
        "elasticnet"
      ],
      "l2_solvers": [
        "newton-cg",
        "lbfgs",
        "saga",
        "liblinear",
        "sag"
      ],
      "C_range": [
        0.01,
        100
      ],
      "max_iter_range": [
        2000,
        10000
      ],
      "l1_ratio_range": [
        0.1,
        0.9
      ],
      "n_trials": 100
    },
    "random_forest": {
      "enabled": true,
      "class_weight": "balanced",
      "n_estimators_range": [
        100,
        500
      ],
      "max_depth_range": [
        3,
        20
      ],
      "min_samples_split_range": [
        2,
        20
      ],
      "min_samples_leaf_range": [
        1,
        10
      ],
      "max_features_range": [
        0.1,
        1.0
      ],
      "n_trials": 20
    },
    "xgboost": {
      "enabled": true,
      "class_weight_mode": "scale_pos_weight",
      "scale_pos_weight": "auto",
      "n_estimators_range": [
        100,
        500
      ],
      "max_depth_range": [
        3,
        20
      ],
      "learning_rate_range": [
        0.001,
        0.3
      ],
      "subsample_range": [
        0.6,
        1.0
      ],
      "colsample_bytree_range": [
        0.6,
        1.0
      ],
      "reg_alpha_range": [
        0.0,
        10.0
      ],
      "reg_lambda_range": [
        1.0,
        10.0
      ],
      "n_trials": 20
    }
  },
  "threshold_optimization": {
    "enabled": true,
    "metric_priority": "f1",
    "search_range": {
      "low": 0.0005,
      "high": 0.5,
      "n_grid": 500
    }
  },
  "ensemble": {
    "enabled": true,
    "method": "weighted_average",
    "auto_weight": true,
    "weight_metric": "average_precision",
    "models": [
      "logistic_regression",
      "random_forest",
      "xgboost"
    ],
    "data_types": [
      "normal",
      "undersampling"
    ],
    "threshold_optimization": {
      "enabled": true,
      "metric_priority": "f1"
    }
  },
  "output": {
    "base_dir": "outputs/modeling_runs",
    "save_models": true,
    "save_results": true,
    "generate_visualizations": true,
    "report_format": [
      "txt",
      "html"
    ]
  },
  "performance": {
    "n_jobs": -1
  },
  "random_state": 42,
  "scaling": {
    "enabled": false,
    "column_groups": {
      "log": null,
      "robust": [
        "매출액증가율",
        "영업이익증가율",
        "당기순이익증가율",
        "총자산증가율",
        "총부채증가율",
        "영업현금흐름증가율",
        "부채자본비율",
        "자본비율",
        "이자부담차입금비율",
        "장기차입금자본비율",
        "총자산수익률(ROA)",
        "자기자본수익률(ROE)",
        "투하자본수익률(ROIC)",
        "총자산회전율",
        "영업이익대차입금비율",
        "현금흐름대부채비율",
        "DOL",
        "DFL",
        "ΔDFL",
        "로그총자산",
        "EV",
        "EV/EBIT",
        "PBR",
        "PER",
        "PSR",
        "PCR",
        "주식회전율",
        "ROA_변화량",
        "ROE_변화량",
        "ROIC_변화량",
        "Δ부채자본비율",
        "Δ자본비율",
        "Δ총자산회전율",
        "Δ현금흐름대부채비율",
        "납입자본금"
      ],
      "standard": null,
      "minmax": null
    }
  }
}